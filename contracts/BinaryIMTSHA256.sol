// SPDX-License-Identifier: MIT
pragma solidity ^0.8.4;

import {InternalBinaryIMT, BinaryIMTData} from "zk-kit-imt-custom-hash/contracts/InternalBinaryIMT.sol";
error WrongDefaultZeroIndex();

library BinaryIMTSHA256 {
    using InternalBinaryIMT for *;

    uint256 internal constant Z_0 = 0x0000000000000000000000000000000000000000000000000000000000000000;
    uint256 internal constant Z_1 = 0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5;
    uint256 internal constant Z_2 = 0xb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d30;
    uint256 internal constant Z_3 = 0x21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba85;
    uint256 internal constant Z_4 = 0xe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a19344;
    uint256 internal constant Z_5 = 0x0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d;
    uint256 internal constant Z_6 = 0x887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a1968;
    uint256 internal constant Z_7 = 0xffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f83;
    uint256 internal constant Z_8 = 0x9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af;
    uint256 internal constant Z_9 = 0xcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e0;
    uint256 internal constant Z_10 = 0xf9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a5;
    uint256 internal constant Z_11 = 0xf8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf892;
    uint256 internal constant Z_12 = 0x3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c;
    uint256 internal constant Z_13 = 0xc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb;
    uint256 internal constant Z_14 = 0x5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc;
    uint256 internal constant Z_15 = 0xda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d2;
    uint256 internal constant Z_16 = 0x2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f;
    uint256 internal constant Z_17 = 0xe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a;
    uint256 internal constant Z_18 = 0x5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a0;
    uint256 internal constant Z_19 = 0xb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa0;
    uint256 internal constant Z_20 = 0xc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e2;
    uint256 internal constant Z_21 = 0xf4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd9;
    uint256 internal constant Z_22 = 0x5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e377;
    uint256 internal constant Z_23 = 0x4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee652;
    uint256 internal constant Z_24 = 0xcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef;
    uint256 internal constant Z_25 = 0x0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d;
    uint256 internal constant Z_26 = 0xb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d0;
    uint256 internal constant Z_27 = 0x838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e;
    uint256 internal constant Z_28 = 0x662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e;
    uint256 internal constant Z_29 = 0x388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea322;
    uint256 internal constant Z_30 = 0x93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d735;
    uint256 internal constant Z_31 = 0x8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a9;
    uint256 internal constant Z_32 = 0x27ae5ba08d7291c96c8cbddcc148bf48a6d68c7974b94356f53754ef6171d757;
    // uint256 internal constant Z_33 = 0xbf558bebd2ceec7f3c5dce04a4782f88c2c6036ae78ee206d0bc5289d20461a2;
    // uint256 internal constant Z_34 = 0xe21908c2968c0699040a6fd866a577a99a9d2ec88745c815fd4a472c789244da;
    // uint256 internal constant Z_35 = 0xae824d72ddc272aab68a8c3022e36f10454437c1886f3ff9927b64f232df414f;
    // uint256 internal constant Z_36 = 0x27e429a4bef3083bc31a671d046ea5c1f5b8c3094d72868d9dfdc12c7334ac5f;
    // uint256 internal constant Z_37 = 0x743cc5c365a9a6a15c1f240ac25880c7a9d1de290696cb766074a1d83d927816;
    // uint256 internal constant Z_38 = 0x4adcf616c3bfabf63999a01966c998b7bb572774035a63ead49da73b5987f347;
    // uint256 internal constant Z_39 = 0x75786645d0c5dd7c04a2f8a75dcae085213652f5bce3ea8b9b9bedd1cab3c5e9;
    // uint256 internal constant Z_40 = 0xb88b152c9b8a7b79637d35911848b0c41e7cc7cca2ab4fe9a15f9c38bb4bb939;
    // uint256 internal constant Z_41 = 0x0c4e2d8ce834ffd7a6cd85d7113d4521abb857774845c4291e6f6d010d97e318;
    // uint256 internal constant Z_42 = 0x5bc799d83e3bb31501b3da786680df30fbc18eb41cbce611e8c0e9c72f69571c;
    // uint256 internal constant Z_43 = 0xa10d3ef857d04d9c03ead7c6317d797a090fa1271ad9c7addfbcb412e9643d4f;
    // uint256 internal constant Z_44 = 0xb33b1809c42623f474055fa9400a2027a7a885c8dfa4efe20666b4ee27d7529c;
    // uint256 internal constant Z_45 = 0x134d7f28d53f175f6bf4b62faa2110d5b76f0f770c15e628181c1fcc18f970a9;
    // uint256 internal constant Z_46 = 0xc34d24b2fc8c50ca9c07a7156ef4e5ff4bdf002eda0b11c1d359d0b59a546807;
    // uint256 internal constant Z_47 = 0x04dbb9db631457879b27e0dfdbe50158fd9cf9b4cf77605c4ac4c95bd65fc9f6;
    // uint256 internal constant Z_48 = 0xf9295a686647cb999090819cda700820c282c613cedcd218540bbc6f37b01c65;
    // uint256 internal constant Z_49 = 0x67c4a1ea624f092a3a5cca2d6f0f0db231972fce627f0ecca0dee60f17551c5f;
    // uint256 internal constant Z_50 = 0x8fdaeb5ab560b2ceb781cdb339361a0fbee1b9dffad59115138c8d6a70dda9cc;
    // uint256 internal constant Z_51 = 0xc1bf0bbdd7fee15764845db875f6432559ff8dbc9055324431bc34e5b93d15da;
    // uint256 internal constant Z_52 = 0x307317849eccd90c0c7b98870b9317c15a5959dcfb84c76dcc908c4fe6ba9212;
    // uint256 internal constant Z_53 = 0x6339bf06e458f6646df5e83ba7c3d35bc263b3222c8e9040068847749ca8e8f9;
    // uint256 internal constant Z_54 = 0x5045e4342aeb521eb3a5587ec268ed3aa6faf32b62b0bc41a9d549521f406fc3;
    // uint256 internal constant Z_55 = 0x08601d83cdd34b5f7b8df63e7b9a16519d35473d0b89c317beed3d3d9424b253;
    // uint256 internal constant Z_56 = 0x84e35c5d92171376cae5c86300822d729cd3a8479583bef09527027dba5f1126;
    // uint256 internal constant Z_57 = 0x3c5cbbeb3834b7a5c1cba9aa5fee0c95ec3f17a33ec3d8047fff799187f5ae20;
    // uint256 internal constant Z_58 = 0x40bbe913c226c34c9fbe4389dd728984257a816892b3cae3e43191dd291f0eb5;
    // uint256 internal constant Z_59 = 0x14af5385bcbb1e4738bbae8106046e6e2fca42875aa5c000c582587742bcc748;
    // uint256 internal constant Z_60 = 0x72f29656803c2f4be177b1b8dd2a5137892b080b022100fde4e96d93ef8c96ff;
    // uint256 internal constant Z_61 = 0xd06f27061c734d7825b46865d00aa900e5cc3a3672080e527171e1171aa5038a;
    // uint256 internal constant Z_62 = 0x28203985b5f2d87709171678169739f957d2745f4bfa5cc91e2b4bd9bf483b40;
    // uint256 internal constant Z_63 = 0x0a162946e56158bac0673e6dd3bdfdc1e4a0e7744a120fdb640050c8d7abe1c6;
    // uint256 internal constant Z_64 = 0xe2c3ed4052eeb1d60514b4c38ece8d73a27f37fa5b36dcbf338e70de95798caa;
    // uint256 internal constant Z_65 = 0x926bf520e7f453db475da42b994d9447de1f93ee91502a64748e371ed0d1207e;
    // uint256 internal constant Z_66 = 0x7516de2f5995cfafacfd70e1a2067241740388d324343a1eb5e71a10f6bb3298;
    // uint256 internal constant Z_67 = 0xea5466fc04d601ab583158b9c6626cfbb66640d7dc229afaa59fd52ff415180b;
    // uint256 internal constant Z_68 = 0x806f45e88b008f79b47585bdf322be73560cb09d6cac65534e8764bae68a607e;
    // uint256 internal constant Z_69 = 0x8456107723bf83d4a67be05860c6730f8540e49ca0f515344ca83a076c622ff5;
    // uint256 internal constant Z_70 = 0x9837f794827f98f048587b3f2d2b67817b34821097cc60069dd15d62ee52273d;
    // uint256 internal constant Z_71 = 0x0cfbd2781f72955df5e33fc4b304fc362fb1637974575f166768f56da09b1fc9;
    // uint256 internal constant Z_72 = 0x98fdc3f9b823005b507065b58c622aac45efeda41706775668b37a230d8aff9e;
    // uint256 internal constant Z_73 = 0xdf0b5e5db8973fa136e3fba2faabd16677494266a1bdc6b0a8dd7aa187b560b2;
    // uint256 internal constant Z_74 = 0xe67efc7167068b5ca5fddeecd68727dce6b03962f356df86edf32581c5e2f142;
    // uint256 internal constant Z_75 = 0xac692525a14b469fa4c0069eff411001aac6c42d3438f043eb9c3115ec79b546;
    // uint256 internal constant Z_76 = 0x420f9e2a54121eef63530c80909eaed61fffacb8af31074df795e8d16d9d77c0;
    // uint256 internal constant Z_77 = 0x572b220bc6da4cc990acf6cb2e3c8a426408cb90c1298e3869cd55660625b2c3;
    // uint256 internal constant Z_78 = 0x3c2dd835b3f37d72592ee76ebced8b1a15310b824a0d62409263f1594da52171;
    // uint256 internal constant Z_79 = 0x10d9f6bbcc5fcd9cf7a8fcd37a14dc7d719fadbc7f75f98ebebb0719397c50c1;
    // uint256 internal constant Z_80 = 0x3324b6af8c3c1a134906345824ea56115ff5d46e863394edec5b4e6089e99d95;
    // uint256 internal constant Z_81 = 0xd70c6460f498b10eb3a4e739e18f8ed10110d89fb35de350c1e07ff7a300f9fb;
    // uint256 internal constant Z_82 = 0x21dfaa8164b31e8d7c6dc1e1d29344001be3ca30c6446b8903f5476553d94c63;
    // uint256 internal constant Z_83 = 0x0d1064e0c1618c57517fc16a4c2f360cd9089464794d8d907c85d0a286a02da6;
    // uint256 internal constant Z_84 = 0x3c29cc1006a2062d4ac52af124a42a0d937f120260434eb3b234c74fde8256cc;
    // uint256 internal constant Z_85 = 0xba6bd22d33b9fe2010eecc7663983e56d39a9b3a6ef9ba7ad252ad47bb3268c4;
    // uint256 internal constant Z_86 = 0xe5aed5fd2336862ff33e1648d0fa058520dbe003049dfe2433d6f9e3305aa08d;
    // uint256 internal constant Z_87 = 0x7275275a0ea97bde92cd92fdd57d472b4db985d2814951c88373f3bbdca84131;
    // uint256 internal constant Z_88 = 0x17e6b3aa581f972e331445b8c661894178ae8852201c8df34706d1dfb6c92f75;
    // uint256 internal constant Z_89 = 0xaeac70a85397030d84193a54a6e596750e6ab3926b530c127a17c9e24b20b8ce;
    // uint256 internal constant Z_90 = 0xbc12436ba2b2cee8586cc4714522d1866fa0e949bde42ad7d9645cdd8fe58ba0;
    // uint256 internal constant Z_91 = 0x49c40fe4834a5e78ff1a24b37b6e40119f520de73a0cb51479d91d73cdebab8f;
    // uint256 internal constant Z_92 = 0xd8df824c861814311dfc864f00253ace3f6745cbc9562806186f74ac957857c1;
    // uint256 internal constant Z_93 = 0xdbf0c1a5316e43762e4a4ea443b9458e97e8a6e7991421bb2eb1f8f346804d2b;
    // uint256 internal constant Z_94 = 0xa94c80c79017fd7ff0e134c5bdee69867a580cd0aff9f1d67f36a9785c02e920;
    // uint256 internal constant Z_95 = 0x966e6f6d7f644467cfe28dc9f9db78d5a025ad5117fc5641184724590e7654e4;
    // uint256 internal constant Z_96 = 0x929bdd7feee9229494a3eafcc2eeea3a5f51db20f26fdb8a9d13344534d8f1fb;
    // uint256 internal constant Z_97 = 0x81b24f93bde1395b538944e740855d144d996fcebaab447637fb47a7e2b74e20;
    // uint256 internal constant Z_98 = 0x04fa584f5a852d22ed2a1834964da6d267e7bca3d9f3a9513c6c077fec5a9501;
    // uint256 internal constant Z_99 = 0x847eb542c8078dae0f4195c0fc6f00341851f26f58963efc59e51c42bfe63bfc;
    // uint256 internal constant Z_100 = 0x1c541f19d04dfaec842b7d790b185904de53503ea4cc6f78fd3f17549082a6ad;
    // uint256 internal constant Z_101 = 0x1038dde7a37f37bab144466ee29afed96179e9f324aea58d4fe991036f1e2bee;
    // uint256 internal constant Z_102 = 0x7ab4e529bcc484ecfab23aee965ac0c34da462d314b34271a5d54768399d7582;
    // uint256 internal constant Z_103 = 0x58c31c137dc3fc670a6a08bea893f6340e80ad7d5f744c90d87f6fac83ff4410;
    // uint256 internal constant Z_104 = 0x1c6457dfbed1d1982b4303e9c8f2aa8efc3b36a0b73b24007503da3936b9643b;
    // uint256 internal constant Z_105 = 0xaf04efc3d21fa0dbd3d0969859f456be53bc855d667153e96a1077c258f5c47c;
    // uint256 internal constant Z_106 = 0xf64f3afe4825e212efd8d5a09b38c24907154b962e87c13494453fe84360f5af;
    // uint256 internal constant Z_107 = 0x2215baa129243bb2489b96eb079f9fc52ffc5a75fe44e4dc5525480b08cec100;
    // uint256 internal constant Z_108 = 0xc016d66a19e8c03a88c7d2deb1c2266264d0def276668c1530e0b4d0797f5bbd;
    // uint256 internal constant Z_109 = 0x21537b0813609408495d2da79242fd95350051c055b282e880251dc7ef2c8604;
    // uint256 internal constant Z_110 = 0xce0e1a1ebd2dbf3788e4629d9edbe23d0320595cb4a2259968bd183fcfe784f4;
    // uint256 internal constant Z_111 = 0x4e31c84801b7c30a7f6a117b9409ae826a2d8ad0856e90e5325c02a171fd406c;
    // uint256 internal constant Z_112 = 0xf50bbdf427e8002383ef989df23898c8fa2ffd6cfbcda75d9c0f388b97b18a37;
    // uint256 internal constant Z_113 = 0xcdeba8b83fb1b00ad0ea7a73d33d5bfc63abbd0209a3a25fc1c6f612fccd4b9e;
    // uint256 internal constant Z_114 = 0xec750d05b6ca921b7dbfc5c80e427c89d2a0746ffe884391445eb58700548374;
    // uint256 internal constant Z_115 = 0x86d55a186b3d9778b312e59bf6883902072e078e05387853e6a9daae02fa0cc3;
    // uint256 internal constant Z_116 = 0x393908f0cf05a59f17147046a51de9e3378b8988b777f97cd48fbbd76b4d302f;
    // uint256 internal constant Z_117 = 0xbbe6e8eeeca8137f1bffc740264e3f51078373a74aad94bb7e06318d0470fc17;
    // uint256 internal constant Z_118 = 0xaf787d9946676534a6ae3b9052a019e2ec315ea1067c0ccfbe02d93c286c9082;
    // uint256 internal constant Z_119 = 0x8a9cd7b8b7fb4f8bc6892dd9862063dd8049c7a2ba1869e917ac4058c4fafa89;
    // uint256 internal constant Z_120 = 0x962bf93a871bae8ecca539235fd64e11d25ff2892c6b5696984247ca1a06ea6f;
    // uint256 internal constant Z_121 = 0xa61932131d5b86a81122ca2d99d9e8ca85a8823d383e4dd529ce6167b39b1b7a;
    // uint256 internal constant Z_122 = 0x0ffd5897716f91d481cb2fae38c1a715048d24f49b4830ed6e0f38df400aca73;
    // uint256 internal constant Z_123 = 0x80c0f853e1e11595f38eb9ce932e81decad7806b6ce626e64664c63d0161300f;
    // uint256 internal constant Z_124 = 0xfe89d1594b8077eda30ce89ce37de5d40326d13fa59af5b65b056d637086493e;
    // uint256 internal constant Z_125 = 0x94aa8010138ccd8527712e6ba00df632f1cb3a26f8bb1a0148394b4da26b9389;
    // uint256 internal constant Z_126 = 0xb5770e44a24cf2e9c028441c87df80f9cdd26899f2a95d149ae42422491261cf;
    // uint256 internal constant Z_127 = 0xccb2e65c2b007fc48a929459b9e55c7cae243a1768db34f563c2f900d9a4a8ad;
    // uint256 internal constant Z_128 = 0x302898c897fe6821c3034bd415821ea249af1158aa1e01223e9f2f7bdabe2a91;
    // uint256 internal constant Z_129 = 0xe2e77f6be80bc97c465771de809cd1d51d18b0c683396f667dc345a80a013d2f;
    // uint256 internal constant Z_130 = 0xf23cc0a657d3ee03226073d99c4bf36f87579727aa1dde29be3b56081c923ecf;
    // uint256 internal constant Z_131 = 0x3722d7964d96ed3cae69957ac1b17c98ea779c761a4fb85854324839a45adc49;
    // uint256 internal constant Z_132 = 0x9dc68abbb997d022d6856ace0a1ac4658c6a50c2d49f0364122de47b674b6987;
    // uint256 internal constant Z_133 = 0x1b6e7c1bb16fcbd954fb343570f8af720ef19c99a4fd9e25385e55adf44c5479;
    // uint256 internal constant Z_134 = 0xe0d3d80775c56a2c2f851a5d85947481174365da46141c42392743675d6ecd3a;
    // uint256 internal constant Z_135 = 0xb5249b4847705e8d30ab13298e63fe8235be99b919a8227e483ef09061897d5c;
    // uint256 internal constant Z_136 = 0x02e85cd2718f3c51347a437a639cd8bda8012a03116bfce7bc2527a1b4bcbe3e;
    // uint256 internal constant Z_137 = 0xd35124787675617fe78a0d0dc3edb867fe65b9e5ab21bcd397cd8cce804add64;
    // uint256 internal constant Z_138 = 0xc776a4515d2ad878e0efca9b85d835f72d8b4993f9d811d6b166ab5bb9fc8aea;
    // uint256 internal constant Z_139 = 0xb7410701f8479f08f86a2e0b4479244ff3dd5387d58a703f9a015fa4d200d89a;
    // uint256 internal constant Z_140 = 0x8b22cab77687d11e22a9a8a1435d8472151e02a58f76dfc43b72b251d171b88e;
    // uint256 internal constant Z_141 = 0xdd401defb6e37b2cf2a4ac58cb3243b951e4961cee4533bded902fc7a4d8e13c;
    // uint256 internal constant Z_142 = 0xeb9b3ef37f57873243293af6b915c758f5d554efeec10b4aa6b3ddd4950d2e4c;
    // uint256 internal constant Z_143 = 0x1ee5f653417fecfabb729e87549d52fa9c57d04f7aaa5227f751aa80b8dc8cf7;
    // uint256 internal constant Z_144 = 0x724122379fae39a109c8fa30ff3eb5dd2ee9a1a845fd9d2535acd55657410bee;
    // uint256 internal constant Z_145 = 0xdb2eea906c679da20dfaaff3ee92905f9aafa3a7b5a2c01f1f685e362b58acb6;
    // uint256 internal constant Z_146 = 0xe6d4940f6ffabfb754cd67588efd188645caef892949bd5d668258018b56a166;
    // uint256 internal constant Z_147 = 0x7e636ee3d2914157a39963c308e93a492ea86cb782d96e47773775f544cbbed9;
    // uint256 internal constant Z_148 = 0x75921e88680163d20f21b0c5ff61d1b97bdbc6d5c69e746090c2bc6cc27d03ed;
    // uint256 internal constant Z_149 = 0x6e961332a631a45900d5c2111360dcff5631b58c0fc3d3ef8e2d57fed5ca15aa;
    // uint256 internal constant Z_150 = 0x2cceb4b84ce151df2873c66c6e18c38739a46d06b75541af46768215b6d50de9;
    // uint256 internal constant Z_151 = 0xa81341fe8aee600370cc4852b1008aaa846e58ba6356c096e2df04cd976f8e46;
    // uint256 internal constant Z_152 = 0x615afdde2756b92ae1012be3e0393856457c9def83fcf93bebc67f6e9d8ac16c;
    // uint256 internal constant Z_153 = 0x2566e509d27fe0c00ef2c3f76571a1de60050d20956554ccee77800c18862848;
    // uint256 internal constant Z_154 = 0x83a8a736815726b51d74b5e17aa40cd190dc8df1fea1d003a63d383befb78c54;
    // uint256 internal constant Z_155 = 0x3fd9e153ba4a11b304729c10f1aadb2c1ce9107dfcbc116a6386bb232af67d51;
    // uint256 internal constant Z_156 = 0x48709af2d94bc10e73010cfbe7c4f6d0c2bab4ae8b47e4550a61395406c45de6;
    // uint256 internal constant Z_157 = 0xc57c3276264b9553da224c0d1a17b68b3c56a4b15662d36e10a35c69b17667ce;
    // uint256 internal constant Z_158 = 0x23d988b412458381a1e7cc4694c7965079160b1475402094e36c5efcb5e2f909;
    // uint256 internal constant Z_159 = 0x09dc157ba005a4ddffe637c6acfdfbf00dd6a841bb68b071b10e780aa40cf85f;
    // uint256 internal constant Z_160 = 0x8263f9ed50c782f009a566c2b39d8190060b943a72eb5a293295de5781eb3f97;
    // uint256 internal constant Z_161 = 0xe98d07db4c54980be0d3163d829aba97ba0021f92c014bfd75073bda8cbf3135;
    // uint256 internal constant Z_162 = 0xdf0ea686d3be86feebdfe4e5735f5e29f873dcccedf032dbe87ebb4ce288e7d2;
    // uint256 internal constant Z_163 = 0x5dc069939571e98953968137491ae284cbef1c8568ba52a6caf16be6686704b5;
    // uint256 internal constant Z_164 = 0xbd0b16f1fa0bc9347890e62b042484a96d935c3f4e4fe26f978a9fae857b29de;
    // uint256 internal constant Z_165 = 0x493f8e90be01b85720fce78d9a0b1723f9207fa40a138a289c2c874f77d44193;
    // uint256 internal constant Z_166 = 0x7073ea24f05b6e6bea9ebaa3fb1d09a27ec6be64c7b23ba47ea31539b7417457;
    // uint256 internal constant Z_167 = 0x7eaf8beb1144577bc002a8206905fca6cb9a92d4669a5e0a2b3e3ec3fec92639;
    // uint256 internal constant Z_168 = 0xbde92386815c070dea0667413a08310509d7c9b28bb1362e27b9971690e5c0c6;
    // uint256 internal constant Z_169 = 0xeb16656865d318680b7b0d5a8561d3dd6af56925970e4c9a4c267c81c3b636da;
    // uint256 internal constant Z_170 = 0xcb6bf96fa19de91de4b5188cce06be2939ec4451e1873e480d1e07bd3dfe918f;
    // uint256 internal constant Z_171 = 0xef2e80422d46790a0431ee33d8aa549d6d4251b1d664c7058b45068c3a976e7c;
    // uint256 internal constant Z_172 = 0x9f4c26b40157d61dd2a2eb64f6a74d655250bc0647527b20216d836a7d48bc45;
    // uint256 internal constant Z_173 = 0x3d861614e2070c13bb97de44f75972ecd5d81e2025fe7127e6ed3f9a2f992c96;
    // uint256 internal constant Z_174 = 0x6925cbe00472cc50784ae9417c15e50c0bd3085b555ffba9160cd56ce0e02ff9;
    // uint256 internal constant Z_175 = 0x2c07ea3527207923e96a912c2dcf391b1e3886b22119b1635c2c2d62cc61495f;
    // uint256 internal constant Z_176 = 0x46fe259ea57d17992fc658f80a94aa2f37b63e6095de918ba699a8fae64fcd2b;
    // uint256 internal constant Z_177 = 0x70fc67c42f2605058653e35656c960c69988e2d9f818b7d498a924c31a6a0d16;
    // uint256 internal constant Z_178 = 0x9f13f19042828f79c17800f6dc624ac76382de4dca5e1948f15e101e4d6c96f4;
    // uint256 internal constant Z_179 = 0x448b7d43a674b893bee7f4bcaf22eb92b8f13eace36cb34afd568a472d25135e;
    // uint256 internal constant Z_180 = 0xdbcb85bd4dc1f4260bf7afb24b264b25f63963d84c1937687ec9a384046af8b2;
    // uint256 internal constant Z_181 = 0x5a9c097d835e29c20a05ebea6b7f23f5e2d1263eb1bd93779efb871e4315d1f7;
    // uint256 internal constant Z_182 = 0xdbed462b6a1b14ea3409d192cb4082cbeff3687a3c0fda1e839ef5956b3c2346;
    // uint256 internal constant Z_183 = 0xcb56b19a815523df24117788d9792fa68fe011ffc3a5910e998991038ecdba36;
    // uint256 internal constant Z_184 = 0xa13e3f556f0fff4fd35c0698d8760015d6eaa6227aec56d3ff68ef223c6947a9;
    // uint256 internal constant Z_185 = 0xeb0ce72e31fb969c4fd010bcea7af9af01685e198cae9b13bd38806166007ef2;
    // uint256 internal constant Z_186 = 0x064162cc07cb6234137fe3ac38224442b26d767c950ac84388a715862a5ffff2;
    // uint256 internal constant Z_187 = 0x67d79d88b9218ca1b4e7d7c178aea170fc0edd4afd6a264698bfa80791d5cd71;
    // uint256 internal constant Z_188 = 0xa28270f841b92dc8698ed5613ecaf11f5d577c023a6803959bdb6a60809273b6;
    // uint256 internal constant Z_189 = 0x447f12f05a198a6f28afea20d07b4ae3fc50afc212ceb0a5d11ee087d6674346;
    // uint256 internal constant Z_190 = 0xeb034ebad3d82683cf594e9971a45b6b67d19c9957086e08fae41c3150487fac;
    // uint256 internal constant Z_191 = 0x70425fd0b7663d80ec9605b7474ee594be89418423dab28378e6c87e666f28b0;
    // uint256 internal constant Z_192 = 0xb89931f7384aeddb5c136a679d54464007e2d828d4741bec626ff92aeb4b12d4;
    // uint256 internal constant Z_193 = 0x7ce243233824b0698d95f4ecb3497eb5a8df4435b6eeacde2315a027f00ad78f;
    // uint256 internal constant Z_194 = 0xc0aa37aeb710e65ae422652f38f11f8070f901005192b8c78223ae379b48abeb;
    // uint256 internal constant Z_195 = 0x6f254bc1e076a7df76784801dde0f19c0e505ed737e3e757f372d2d47fb252da;
    // uint256 internal constant Z_196 = 0x423347221fcd7574927ba888aea064acbf414372d5a62ad1e16117e3993cd677;
    // uint256 internal constant Z_197 = 0x673babc2accf35a04ffc95b876350213acfd7a25788657c1d0389341a53e2567;
    // uint256 internal constant Z_198 = 0x3ffb44d37de9dcd28993916ae580f70d6106cf4e70a4d34bc6648c7ba6771ba4;
    // uint256 internal constant Z_199 = 0x9332824ef368c2478ce674df35843faeeaceda4d677657248e666053ee01fb13;
    // uint256 internal constant Z_200 = 0x70c1f38a299f77e14d6a6c6e0afea94c32441639cabfdea10015c9af71ebab82;
    // uint256 internal constant Z_201 = 0x061b9f4ec1eaacc79cee97ac6014742dd382aebc463c01b87b281023a5be9984;
    // uint256 internal constant Z_202 = 0x3102780a3dcaa2d4fa9f80fb2df8d93c1f78b8ca6bf42e7064c61a7abbedacc4;
    // uint256 internal constant Z_203 = 0x4c03cd8bcc2fd100b9d55cf1734d0610ba2e8c77d520ee122809094f9aea4a25;
    // uint256 internal constant Z_204 = 0x0e249488cc9aabaee9d513bbdb623c78a72734f490d22c4cce73b36ab7af46b2;
    // uint256 internal constant Z_205 = 0x2b0108a7f4d9f1b5d6b5868d0bb49cc4efe01c0511efb9fa6cafe2630bbf8e7f;
    // uint256 internal constant Z_206 = 0xf4860fc94c5e4043f504cbe0c87d2e5fc8fd6f0ee2c730a8e5fe5eac9ab9b4d8;
    // uint256 internal constant Z_207 = 0x06b9194724bca5212ee2fa67d9b3bade90581e82c337efba29575e76588483d0;
    // uint256 internal constant Z_208 = 0x8cfa68a2f4d315a70c88917211d67e7d5d00e8d7540d1593d1588b044a708cc6;
    // uint256 internal constant Z_209 = 0xbd16b756d8984859394b076a600039e275042dd6f4f1d83ede4d6cf1eeeae0a6;
    // uint256 internal constant Z_210 = 0x49901548b8f0b385f5d4b66ece4d86d7088d31874acf74a67398a5ec5442d421;
    // uint256 internal constant Z_211 = 0x5634987e436260d9655bb52076ce394d7507827d7886db3209d8a43b625a8c43;
    // uint256 internal constant Z_212 = 0x0fab9c71fa94b034ff7829f8e5143571df082264a8b10f84e02a1bf7cd2a4da5;
    // uint256 internal constant Z_213 = 0x36b146637084b907e9a23b454b203658e9820941af6fe2c03a2f5fcc3210a69f;
    // uint256 internal constant Z_214 = 0x9ade6c91a2dcf10807dd96e28c81fe6bf14953fb0fd1451bcf8084c3ff1e3074;
    // uint256 internal constant Z_215 = 0xd98ea666cba629938bca5a6dc70dc6586a4211d7890f831a8f5f74e1316a0352;
    // uint256 internal constant Z_216 = 0xe567ee0f0510cb5bd6c5c3c256109863ac27f4fbaa2b04c716443dda47439f19;
    // uint256 internal constant Z_217 = 0x5a0b689972d503a757da449ebf2a649ff22d96eac16371023864bdd28dead6ba;
    // uint256 internal constant Z_218 = 0x638602355836f79873347ed2bb035cdb620191e66b07e169c02bd4efe40034fb;
    // uint256 internal constant Z_219 = 0x3de19a51923bc39ebd7967e173c1ef75c6ce263277650672892cbecc7f08ce21;
    // uint256 internal constant Z_220 = 0x623f203318c1f61436b7ee9ce4bdb946f79c5f305ab79e0db91c311451f6c90d;
    // uint256 internal constant Z_221 = 0x3dc3713d2f220ea9aeeb28d94574777eac7f3ba57c22f80f5f9be59b34ed20b4;
    // uint256 internal constant Z_222 = 0xcceda416b9f629cc37fc124fc0105b6e9482a94aad927f57f5adb3b6f766df61;
    // uint256 internal constant Z_223 = 0xb41ae12aec6551412cbd897ddbd8b3200a920fb9e50ab30a17780dd1f52dba84;
    // uint256 internal constant Z_224 = 0x06fe5fc1132caa34bdb1a9a00ae89b8b5ff2e14ff76001b3c2c33e4e22794d03;
    // uint256 internal constant Z_225 = 0x2c2c1049a7258bb26aa7b7307428d1b691e2d161e8f004b2ea05ec5f79e97da6;
    // uint256 internal constant Z_226 = 0xab03092ddd92eedaed8cde9d6a14ea5680ea5cc5e56b076db47bb31f4198bf28;
    // uint256 internal constant Z_227 = 0x6555fec505cea1e237c5196e4b1a1fd805ae6ecc3d9ce473dfcf9c4dfe715dbf;
    // uint256 internal constant Z_228 = 0xc7ddac7a99a7b9910b8847b670d5af53f7958af0a7967b79b9ac0069c390244f;
    // uint256 internal constant Z_229 = 0xba78706f57a574f063d5160fc298e05f2aab06dc887e797f2a97181414643d42;
    // uint256 internal constant Z_230 = 0x485da52d1d8900a627e2f3cc9f3cf6e653b8effed5972cd10a38990f2fefc494;
    // uint256 internal constant Z_231 = 0x3d2f6f07c36756184ef2c622365cbaffb8b62e340f384388bb5bee95a7c6c1aa;
    // uint256 internal constant Z_232 = 0xd17b42ded56f410a916f905ace0219c3f5b859b9e62da6ab4425792b1b6dae37;
    // uint256 internal constant Z_233 = 0x64101129829c8cedc9bd315090d55aaf67255d64c766f15bb38ebcd4f2217607;
    // uint256 internal constant Z_234 = 0x88fefa6ab20bb415c3d82a5a289a41ee611aac573c11d884b56e8788f769ffa2;
    // uint256 internal constant Z_235 = 0xd362f3b43a268c4f1677145db590769d5eddce0efccfb9e8ba1c54058f657fd9;
    // uint256 internal constant Z_236 = 0x6bd16aa587f6d9de55a4171252c85261f5695bba8ddf34002975c3386c9ea9ea;
    // uint256 internal constant Z_237 = 0xed00b0a87e48f1fa043a23aa2bc7036783b8092c2471f7c3d987f09ab0b0e22b;
    // uint256 internal constant Z_238 = 0x75d0331a2a803d949f93a2b3168f76518c075a8c4fca928672678f87fd6bdaa6;
    // uint256 internal constant Z_239 = 0xce6ac2100a499f6c6f8a702ffcc3f5b0c0f9461f11f31a08c475bcb7b9897682;
    // uint256 internal constant Z_240 = 0xa6b6783eb421c580bcd34282076160249de5a519062c4290916deb0cf172cd72;
    // uint256 internal constant Z_241 = 0x83dba80f08b844f2c87d9bd3672a01db0648be947d801be995311d829a16c704;
    // uint256 internal constant Z_242 = 0x5aba21b705a5b119057f2c9a72f1d1129c4415cd8e6e5af438f52b64ab4d19b3;
    // uint256 internal constant Z_243 = 0x70d3b6ebad9db60e0e1bb999b5e7c7fe576f4b22781f325af3a08ebc7a004a1e;
    // uint256 internal constant Z_244 = 0x3132f61390538fdc20495f4083337ba85936959ca5199e2ecbebe74a0380a214;
    // uint256 internal constant Z_245 = 0x8feba6e9aef1d63845f0d07b1cb47e864db044cfe32777db3129bf5f7b78121f;
    // uint256 internal constant Z_246 = 0x1d8d4c0d75f6229827bb9d26fd53433c0eabf03aa5a5103c52992c149cf14aac;
    // uint256 internal constant Z_247 = 0x9c876e32583d71eb49269f1473d6f1655372c8b16b85b477e9b0f0277c7e39be;
    // uint256 internal constant Z_248 = 0x1396617458c5084df53ea9b892b2f5c6289fcb5c0562b05eb07c058bf32bfe20;
    // uint256 internal constant Z_249 = 0x1eec9748c40ad9fc8acc6022d15886e5bd1e4580b811e237cffc0478c6e53caf;
    // uint256 internal constant Z_250 = 0x42af4d9f659bdb3d01867148f609687c6bdd3a9644565017f29fd3d9ba9b9824;
    // uint256 internal constant Z_251 = 0x2881d7188f16068d477b7d2ccd5dc1e27e1c38fd8821ed977229ac1bd53e1dae;
    // uint256 internal constant Z_252 = 0x5f083e405874f6bfe5bc919385f500ae444b9a171159b3b6476cad78c38a0077;
    // uint256 internal constant Z_253 = 0x65f2bd62ad4a29a593e38bcbaac0685033d2cdb4a8129d9e7672a75ba42820c2;
    // uint256 internal constant Z_254 = 0xbdaf0a25a0628973d4df7e4c053cda1318b39801d3f0fba827ebe792ec12cbfa;
    // uint256 internal constant Z_255 = 0x998eb736da0f9741c6cfc2dad952491708b7b4ddabb15d37699af13fed29c35d;
    // uint256 internal constant Z_256 = 0xa7ff9e28ffd3def443d324547688c2c4eb98edf7da757d6bfa22bff55b9ce24a;

    function _defaultZero(uint256 index) internal pure returns (uint256) {
        if (index == 0) return Z_0;
        if (index == 1) return Z_1;
        if (index == 2) return Z_2;
        if (index == 3) return Z_3;
        if (index == 4) return Z_4;
        if (index == 5) return Z_5;
        if (index == 6) return Z_6;
        if (index == 7) return Z_7;
        if (index == 8) return Z_8;
        if (index == 9) return Z_9;
        if (index == 10) return Z_10;
        if (index == 11) return Z_11;
        if (index == 12) return Z_12;
        if (index == 13) return Z_13;
        if (index == 14) return Z_14;
        if (index == 15) return Z_15;
        if (index == 16) return Z_16;
        if (index == 17) return Z_17;
        if (index == 18) return Z_18;
        if (index == 19) return Z_19;
        if (index == 20) return Z_20;
        if (index == 21) return Z_21;
        if (index == 22) return Z_22;
        if (index == 23) return Z_23;
        if (index == 24) return Z_24;
        if (index == 25) return Z_25;
        if (index == 26) return Z_26;
        if (index == 27) return Z_27;
        if (index == 28) return Z_28;
        if (index == 29) return Z_29;
        if (index == 30) return Z_30;
        if (index == 31) return Z_31;
        if (index == 32) return Z_32;
        // if (index == 33) return Z_33;
        // if (index == 34) return Z_34;
        // if (index == 35) return Z_35;
        // if (index == 36) return Z_36;
        // if (index == 37) return Z_37;
        // if (index == 38) return Z_38;
        // if (index == 39) return Z_39;
        // if (index == 40) return Z_40;
        // if (index == 41) return Z_41;
        // if (index == 42) return Z_42;
        // if (index == 43) return Z_43;
        // if (index == 44) return Z_44;
        // if (index == 45) return Z_45;
        // if (index == 46) return Z_46;
        // if (index == 47) return Z_47;
        // if (index == 48) return Z_48;
        // if (index == 49) return Z_49;
        // if (index == 50) return Z_50;
        // if (index == 51) return Z_51;
        // if (index == 52) return Z_52;
        // if (index == 53) return Z_53;
        // if (index == 54) return Z_54;
        // if (index == 55) return Z_55;
        // if (index == 56) return Z_56;
        // if (index == 57) return Z_57;
        // if (index == 58) return Z_58;
        // if (index == 59) return Z_59;
        // if (index == 60) return Z_60;
        // if (index == 61) return Z_61;
        // if (index == 62) return Z_62;
        // if (index == 63) return Z_63;
        // if (index == 64) return Z_64;
        // if (index == 65) return Z_65;
        // if (index == 66) return Z_66;
        // if (index == 67) return Z_67;
        // if (index == 68) return Z_68;
        // if (index == 69) return Z_69;
        // if (index == 70) return Z_70;
        // if (index == 71) return Z_71;
        // if (index == 72) return Z_72;
        // if (index == 73) return Z_73;
        // if (index == 74) return Z_74;
        // if (index == 75) return Z_75;
        // if (index == 76) return Z_76;
        // if (index == 77) return Z_77;
        // if (index == 78) return Z_78;
        // if (index == 79) return Z_79;
        // if (index == 80) return Z_80;
        // if (index == 81) return Z_81;
        // if (index == 82) return Z_82;
        // if (index == 83) return Z_83;
        // if (index == 84) return Z_84;
        // if (index == 85) return Z_85;
        // if (index == 86) return Z_86;
        // if (index == 87) return Z_87;
        // if (index == 88) return Z_88;
        // if (index == 89) return Z_89;
        // if (index == 90) return Z_90;
        // if (index == 91) return Z_91;
        // if (index == 92) return Z_92;
        // if (index == 93) return Z_93;
        // if (index == 94) return Z_94;
        // if (index == 95) return Z_95;
        // if (index == 96) return Z_96;
        // if (index == 97) return Z_97;
        // if (index == 98) return Z_98;
        // if (index == 99) return Z_99;
        // if (index == 100) return Z_100;
        // if (index == 101) return Z_101;
        // if (index == 102) return Z_102;
        // if (index == 103) return Z_103;
        // if (index == 104) return Z_104;
        // if (index == 105) return Z_105;
        // if (index == 106) return Z_106;
        // if (index == 107) return Z_107;
        // if (index == 108) return Z_108;
        // if (index == 109) return Z_109;
        // if (index == 110) return Z_110;
        // if (index == 111) return Z_111;
        // if (index == 112) return Z_112;
        // if (index == 113) return Z_113;
        // if (index == 114) return Z_114;
        // if (index == 115) return Z_115;
        // if (index == 116) return Z_116;
        // if (index == 117) return Z_117;
        // if (index == 118) return Z_118;
        // if (index == 119) return Z_119;
        // if (index == 120) return Z_120;
        // if (index == 121) return Z_121;
        // if (index == 122) return Z_122;
        // if (index == 123) return Z_123;
        // if (index == 124) return Z_124;
        // if (index == 125) return Z_125;
        // if (index == 126) return Z_126;
        // if (index == 127) return Z_127;
        // if (index == 128) return Z_128;
        // if (index == 129) return Z_129;
        // if (index == 130) return Z_130;
        // if (index == 131) return Z_131;
        // if (index == 132) return Z_132;
        // if (index == 133) return Z_133;
        // if (index == 134) return Z_134;
        // if (index == 135) return Z_135;
        // if (index == 136) return Z_136;
        // if (index == 137) return Z_137;
        // if (index == 138) return Z_138;
        // if (index == 139) return Z_139;
        // if (index == 140) return Z_140;
        // if (index == 141) return Z_141;
        // if (index == 142) return Z_142;
        // if (index == 143) return Z_143;
        // if (index == 144) return Z_144;
        // if (index == 145) return Z_145;
        // if (index == 146) return Z_146;
        // if (index == 147) return Z_147;
        // if (index == 148) return Z_148;
        // if (index == 149) return Z_149;
        // if (index == 150) return Z_150;
        // if (index == 151) return Z_151;
        // if (index == 152) return Z_152;
        // if (index == 153) return Z_153;
        // if (index == 154) return Z_154;
        // if (index == 155) return Z_155;
        // if (index == 156) return Z_156;
        // if (index == 157) return Z_157;
        // if (index == 158) return Z_158;
        // if (index == 159) return Z_159;
        // if (index == 160) return Z_160;
        // if (index == 161) return Z_161;
        // if (index == 162) return Z_162;
        // if (index == 163) return Z_163;
        // if (index == 164) return Z_164;
        // if (index == 165) return Z_165;
        // if (index == 166) return Z_166;
        // if (index == 167) return Z_167;
        // if (index == 168) return Z_168;
        // if (index == 169) return Z_169;
        // if (index == 170) return Z_170;
        // if (index == 171) return Z_171;
        // if (index == 172) return Z_172;
        // if (index == 173) return Z_173;
        // if (index == 174) return Z_174;
        // if (index == 175) return Z_175;
        // if (index == 176) return Z_176;
        // if (index == 177) return Z_177;
        // if (index == 178) return Z_178;
        // if (index == 179) return Z_179;
        // if (index == 180) return Z_180;
        // if (index == 181) return Z_181;
        // if (index == 182) return Z_182;
        // if (index == 183) return Z_183;
        // if (index == 184) return Z_184;
        // if (index == 185) return Z_185;
        // if (index == 186) return Z_186;
        // if (index == 187) return Z_187;
        // if (index == 188) return Z_188;
        // if (index == 189) return Z_189;
        // if (index == 190) return Z_190;
        // if (index == 191) return Z_191;
        // if (index == 192) return Z_192;
        // if (index == 193) return Z_193;
        // if (index == 194) return Z_194;
        // if (index == 195) return Z_195;
        // if (index == 196) return Z_196;
        // if (index == 197) return Z_197;
        // if (index == 198) return Z_198;
        // if (index == 199) return Z_199;
        // if (index == 200) return Z_200;
        // if (index == 201) return Z_201;
        // if (index == 202) return Z_202;
        // if (index == 203) return Z_203;
        // if (index == 204) return Z_204;
        // if (index == 205) return Z_205;
        // if (index == 206) return Z_206;
        // if (index == 207) return Z_207;
        // if (index == 208) return Z_208;
        // if (index == 209) return Z_209;
        // if (index == 210) return Z_210;
        // if (index == 211) return Z_211;
        // if (index == 212) return Z_212;
        // if (index == 213) return Z_213;
        // if (index == 214) return Z_214;
        // if (index == 215) return Z_215;
        // if (index == 216) return Z_216;
        // if (index == 217) return Z_217;
        // if (index == 218) return Z_218;
        // if (index == 219) return Z_219;
        // if (index == 220) return Z_220;
        // if (index == 221) return Z_221;
        // if (index == 222) return Z_222;
        // if (index == 223) return Z_223;
        // if (index == 224) return Z_224;
        // if (index == 225) return Z_225;
        // if (index == 226) return Z_226;
        // if (index == 227) return Z_227;
        // if (index == 228) return Z_228;
        // if (index == 229) return Z_229;
        // if (index == 230) return Z_230;
        // if (index == 231) return Z_231;
        // if (index == 232) return Z_232;
        // if (index == 233) return Z_233;
        // if (index == 234) return Z_234;
        // if (index == 235) return Z_235;
        // if (index == 236) return Z_236;
        // if (index == 237) return Z_237;
        // if (index == 238) return Z_238;
        // if (index == 239) return Z_239;
        // if (index == 240) return Z_240;
        // if (index == 241) return Z_241;
        // if (index == 242) return Z_242;
        // if (index == 243) return Z_243;
        // if (index == 244) return Z_244;
        // if (index == 245) return Z_245;
        // if (index == 246) return Z_246;
        // if (index == 247) return Z_247;
        // if (index == 248) return Z_248;
        // if (index == 249) return Z_249;
        // if (index == 250) return Z_250;
        // if (index == 251) return Z_251;
        // if (index == 252) return Z_252;
        // if (index == 253) return Z_253;
        // if (index == 254) return Z_254;
        // if (index == 255) return Z_255;
        // if (index == 256) return Z_256;
        revert WrongDefaultZeroIndex();
    }

    function hasher(uint256[2] memory inputs) internal pure returns (uint256) {
        return uint256(keccak256(abi.encode(inputs)));
    }

    function defaultZero(uint256 index) public pure returns (uint256) {
        return _defaultZero(index);
    }

    function init(BinaryIMTData storage self, uint256 depth, uint256 zero) public {
        InternalBinaryIMT._init(self, depth, zero, hasher);
    }

    function initWithDefaultZeroes(BinaryIMTData storage self, uint256 depth) public {
        InternalBinaryIMT._initWithDefaultZeroes(self, depth, _defaultZero);
    }

    function insert(BinaryIMTData storage self, uint256 leaf) public returns (uint256) {
        return InternalBinaryIMT._insert(self, leaf, hasher, _defaultZero);
    }

    function update(
        BinaryIMTData storage self,
        uint256 leaf,
        uint256 newLeaf,
        uint256[] calldata proofSiblings,
        uint8[] calldata proofPathIndices
    ) public {
        InternalBinaryIMT._update(self, leaf, newLeaf, proofSiblings, proofPathIndices, hasher);
    }

    function remove(
        BinaryIMTData storage self,
        uint256 leaf,
        uint256[] calldata proofSiblings,
        uint8[] calldata proofPathIndices
    ) public {
        InternalBinaryIMT._remove(self, leaf, proofSiblings, proofPathIndices, hasher, Z_0);
    }
}
