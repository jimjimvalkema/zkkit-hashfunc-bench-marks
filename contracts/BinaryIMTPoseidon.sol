// SPDX-License-Identifier: MIT
pragma solidity ^0.8.4;

import {InternalBinaryIMT, BinaryIMTData} from "zk-kit-imt-custom-hash/contracts/InternalBinaryIMT.sol";
import {PoseidonT3} from "poseidon-solidity/PoseidonT3.sol";
import {SNARK_SCALAR_FIELD} from "zk-kit-imt-custom-hash/contracts/Constants.sol";

error ValueGreaterThanSnarkScalarField();
error WrongDefaultZeroIndex();

library BinaryIMTPoseidon {
    using InternalBinaryIMT for *;

    uint256 internal constant Z_0 = 0x00;
    uint256 internal constant Z_1 = 0x2098f5fb9e239eab3ceac3f27b81e481dc3124d55ffed523a839ee8446b64864;
    uint256 internal constant Z_2 = 0x1069673dcdb12263df301a6ff584a7ec261a44cb9dc68df067a4774460b1f1e1;
    uint256 internal constant Z_3 = 0x18f43331537ee2af2e3d758d50f72106467c6eea50371dd528d57eb2b856d238;
    uint256 internal constant Z_4 = 0x07f9d837cb17b0d36320ffe93ba52345f1b728571a568265caac97559dbc952a;
    uint256 internal constant Z_5 = 0x2b94cf5e8746b3f5c9631f4c5df32907a699c58c94b2ad4d7b5cec1639183f55;
    uint256 internal constant Z_6 = 0x2dee93c5a666459646ea7d22cca9e1bcfed71e6951b953611d11dda32ea09d78;
    uint256 internal constant Z_7 = 0x078295e5a22b84e982cf601eb639597b8b0515a88cb5ac7fa8a4aabe3c87349d;
    uint256 internal constant Z_8 = 0x2fa5e5f18f6027a6501bec864564472a616b2e274a41211a444cbe3a99f3cc61;
    uint256 internal constant Z_9 = 0x0e884376d0d8fd21ecb780389e941f66e45e7acce3e228ab3e2156a614fcd747;
    uint256 internal constant Z_10 = 0x1b7201da72494f1e28717ad1a52eb469f95892f957713533de6175e5da190af2;
    uint256 internal constant Z_11 = 0x1f8d8822725e36385200c0b201249819a6e6e1e4650808b5bebc6bface7d7636;
    uint256 internal constant Z_12 = 0x2c5d82f66c914bafb9701589ba8cfcfb6162b0a12acf88a8d0879a0471b5f85a;
    uint256 internal constant Z_13 = 0x14c54148a0940bb820957f5adf3fa1134ef5c4aaa113f4646458f270e0bfbfd0;
    uint256 internal constant Z_14 = 0x190d33b12f986f961e10c0ee44d8b9af11be25588cad89d416118e4bf4ebe80c;
    uint256 internal constant Z_15 = 0x22f98aa9ce704152ac17354914ad73ed1167ae6596af510aa5b3649325e06c92;
    uint256 internal constant Z_16 = 0x2a7c7c9b6ce5880b9f6f228d72bf6a575a526f29c66ecceef8b753d38bba7323;
    uint256 internal constant Z_17 = 0x2e8186e558698ec1c67af9c14d463ffc470043c9c2988b954d75dd643f36b992;
    uint256 internal constant Z_18 = 0x0f57c5571e9a4eab49e2c8cf050dae948aef6ead647392273546249d1c1ff10f;
    uint256 internal constant Z_19 = 0x1830ee67b5fb554ad5f63d4388800e1cfe78e310697d46e43c9ce36134f72cca;
    uint256 internal constant Z_20 = 0x2134e76ac5d21aab186c2be1dd8f84ee880a1e46eaf712f9d371b6df22191f3e;
    uint256 internal constant Z_21 = 0x19df90ec844ebc4ffeebd866f33859b0c051d8c958ee3aa88f8f8df3db91a5b1;
    uint256 internal constant Z_22 = 0x18cca2a66b5c0787981e69aefd84852d74af0e93ef4912b4648c05f722efe52b;
    uint256 internal constant Z_23 = 0x2388909415230d1b4d1304d2d54f473a628338f2efad83fadf05644549d2538d;
    uint256 internal constant Z_24 = 0x27171fb4a97b6cc0e9e8f543b5294de866a2af2c9c8d0b1d96e673e4529ed540;
    uint256 internal constant Z_25 = 0x2ff6650540f629fd5711a0bc74fc0d28dcb230b9392583e5f8d59696dde6ae21;
    uint256 internal constant Z_26 = 0x120c58f143d491e95902f7f5277778a2e0ad5168f6add75669932630ce611518;
    uint256 internal constant Z_27 = 0x1f21feb70d3f21b07bf853d5e5db03071ec495a0a565a21da2d665d279483795;
    uint256 internal constant Z_28 = 0x24be905fa71335e14c638cc0f66a8623a826e768068a9e968bb1a1dde18a72d2;
    uint256 internal constant Z_29 = 0x0f8666b62ed17491c50ceadead57d4cd597ef3821d65c328744c74e553dac26d;
    uint256 internal constant Z_30 = 0x0918d46bf52d98b034413f4a1a1c41594e7a7a3f6ae08cb43d1a2a230e1959ef;
    uint256 internal constant Z_31 = 0x1bbeb01b4c479ecde76917645e404dfa2e26f90d0afc5a65128513ad375c5ff2;
    uint256 internal constant Z_32 = 0x2f68a1c58e257e42a17a6c61dff5551ed560b9922ab119d5ac8e184c9734ead9;
    // uint256 internal constant Z_33 = 0x1102d2f8db05e4af4842e8ad3d85ed45eb28447eb7212235a2281d5ab5d81d11;
    // uint256 internal constant Z_34 = 0x2af8c1caf560dd41f997a01ff895b21e0d1fedb786e7cad29901e12310638bdc;
    // uint256 internal constant Z_35 = 0x011d923bc14b5a13972ac7dfe6420b15b0425c98ba80edaf5e0291b4a265e0a5;
    // uint256 internal constant Z_36 = 0x224ccc25981822d4c5b6fc199fbc74828488741c7151a6159ecfaab7c2a8bac9;
    // uint256 internal constant Z_37 = 0x27e839f6f555feae824ab433e34b1c0e64ce5c75962dffc13c68571d6b4a610e;
    // uint256 internal constant Z_38 = 0x2aba203fbd04bfabc86b4d50d6abadc3c24f37efa00e700ef4d17764c2ccd57c;
    // uint256 internal constant Z_39 = 0x11eff4f60c2cdcc548c1e0770c3d64b49c01e34da4af29cfea575a19befa669c;
    // uint256 internal constant Z_40 = 0x1334fa4b552f00ef403361c935c1abcf896851003c40daa93bb0fd0a0bb9a881;
    // uint256 internal constant Z_41 = 0x095465e700400e42508ff83ef3301c29548494a950d06a7e292d470578d03502;
    // uint256 internal constant Z_42 = 0x2f8e86e00c5d50b519c70ecd13857ab4168a5a196005a24e01095cf35ebbca36;
    // uint256 internal constant Z_43 = 0x23f9a91bd3f701120d161fc2977dd22725c30a9cfd197874184c4930251f5ae8;
    // uint256 internal constant Z_44 = 0x1a6be2423333965b4780e29f3cbe0139e6d50a4d1f5c9ca30f04f2e86d944cf3;
    // uint256 internal constant Z_45 = 0x1d38d91341feeb0e4c65d1fd5b9b6fae9d23270be2454700b29a16075094a539;
    // uint256 internal constant Z_46 = 0x1791e53e02ea5d543426c549b8eedc0e9155e28c7ce82fff570b57e3ad942bb5;
    // uint256 internal constant Z_47 = 0x13c87672e2e42af99431a3b87069a2a807edde5f5fc0ebc1e232b35462103fc5;
    // uint256 internal constant Z_48 = 0x2560b1549e9ca7ccc6156bb4cf08d297c813a76bdb76eac625a469e8709ea347;
    // uint256 internal constant Z_49 = 0x1103fc9acff0623d43ad6fb880ad407c6db5cac40d8f2e613e8cc96002d26764;
    // uint256 internal constant Z_50 = 0x1c6b6e4c49e573fedc43f5eb38bc8ee22ec869898f8c53a24d9f08f4089c96fc;
    // uint256 internal constant Z_51 = 0x0f2935c857a6eb5fb53acb90647bdef214b4bc44ae8f938be315665cdc35814f;
    // uint256 internal constant Z_52 = 0x0f757df13d72190ea40a31e8fca3153e7ae1c2d838e883cfe7a879bb497ebdde;
    // uint256 internal constant Z_53 = 0xbd3f60b7a998f4df37484e0d82957b7c073f117a75bd12c78835a9f8424eee;
    // uint256 internal constant Z_54 = 0x2e140381064d1bc4a03fba2fa77a96fd34483494a3bc67c817ff08af047bf03b;
    // uint256 internal constant Z_55 = 0x2bf4f9eb8cd5603970dd6be39cafeb453fdac17ee7a58ee6f0dc3b1ab7a108ec;
    // uint256 internal constant Z_56 = 0x2d350d01a57bc8b9ead45a63a80283fa9117deef1ce62db78c47fb1258043cd3;
    // uint256 internal constant Z_57 = 0x2be2aca62bd64ff43e9205b872d3b72257ab0c9a55fb38b3c8e6d2d1d674711d;
    // uint256 internal constant Z_58 = 0x0d3b12bb8d9b88193f04560f180e301faaa7a6eb4ceaeb6dc566e9f564d5db58;
    // uint256 internal constant Z_59 = 0x1a6534d9b5b4eebdfb455c403d79982c7b62f030ed1dc17f6516856e1c8317fc;
    // uint256 internal constant Z_60 = 0x0ad0c4b5f9e7ab0313935afa436a550ceb566d032b8f02a9a6de7483be2aea63;
    // uint256 internal constant Z_61 = 0x0b2fe4bc9a7d7bb04c3e258b26107a2f4152383381d385197b3a06e6b5e7e6b3;
    // uint256 internal constant Z_62 = 0x228871f617790cb6aca82625f1171477fb9c7e491d802a26dee25e4a8ea80cc7;
    // uint256 internal constant Z_63 = 0x033aad2d7c550a01daa7efafc0eab3dcd7a52d1e124f44e2d18afebfbdff39e9;
    // uint256 internal constant Z_64 = 0x217a61f1e65f5e1332c7fa259b7864875e5e2f9909249288ae139d95ff143f11;
    // uint256 internal constant Z_65 = 0x0df83fafe180e7279620ac76d417ed7fc98efd75beaf9ca8dba1d21a6f0237fd;
    // uint256 internal constant Z_66 = 0x093f4b8efa0a58bf250fdb5b85446cf60a436177bb8b70eabf25b52e41da7e0e;
    // uint256 internal constant Z_67 = 0x1b234777c11332dd4eb0bfbe89f86f8ac77b11592fe8422399694a87363883ec;
    // uint256 internal constant Z_68 = 0x304c60f6ec421e3d88b66dd8c95ff741e481b1755528112423b8f23efd2f0da6;
    // uint256 internal constant Z_69 = 0x06e500455af2ab00bb5c83f35f22fef36b330bdcda565fd41335e5eec33e781f;
    // uint256 internal constant Z_70 = 0x2e3cee276e180c16d8503cdb23470b3b91bd360827d3ac33dc5bd6b2a2029b4e;
    // uint256 internal constant Z_71 = 0x126bbe4b5c03c41d60b2896fa87cc07456f707517dfa023eb8d7d924f9cfa118;
    // uint256 internal constant Z_72 = 0x02694e2e920537f98f2ebcfcc01397cc1c46c538a3ce277e21d8d1c16b2f0c01;
    // uint256 internal constant Z_73 = 0x1d80237758dd2c92f5d2805256cf515a2b62b4acf693c8e60f3c79181db7daa1;
    // uint256 internal constant Z_74 = 0x10f6b1c3bbb7997d4e5a0556a02cd5b0ce6e0b421822d14681672bc9e4578103;
    // uint256 internal constant Z_75 = 0x169f310b8e041dbc780b08414f869ec96abef3a10aa51c4cd7888498c85bdf18;
    // uint256 internal constant Z_76 = 0x2f52e5a105d1a3644c358b0385b0adeb89ea9a1c3cceef435eb7d1a981e27c8a;
    // uint256 internal constant Z_77 = 0x2c33663bdd9e3692f49888e7b485beb95911c6fb25267af1f216282963e7c702;
    // uint256 internal constant Z_78 = 0x20b48b51dbd15c51216d21de1788f36eb214a41c3294bc7e1bab086bc6b05ae9;
    // uint256 internal constant Z_79 = 0x113181ab113684b3be85f66062baaddd3a9ebae6a0f915e876ec4c304c987072;
    // uint256 internal constant Z_80 = 0x1dc3b032c74b4ce7a8b30b4e27efdc39e74c72d1ca6f55fc4cdc532a2a036faf;
    // uint256 internal constant Z_81 = 0x0e725a4e049f5c0bddf7ab45fb066b34ee7b5582ab05dfecb9db89402cb16613;
    // uint256 internal constant Z_82 = 0x13ea84661ad34938e57bc9f28a80a4bc5e7d641e73e475866806548ad26ab6b7;
    // uint256 internal constant Z_83 = 0x27780415da609ba7d42712bf36e1608d682f2a24ae92c24d5e62d48d8b0cc7c3;
    // uint256 internal constant Z_84 = 0x23c3bae36677f468e5c380d975362e88b64b405b9dd90b6d517d468a52b954b0;
    // uint256 internal constant Z_85 = 0x060f3cd3fcd8450351c10f2be6d318c3ee19f19b8e0d4fe5f8ab597418cec3fc;
    // uint256 internal constant Z_86 = 0x1a10e439f89a80835c3a59b67047645bec4732ca20ce62cd4e76cf3dda968b71;
    // uint256 internal constant Z_87 = 0x0bd2a119a607a0ee3ece8e6be64c8954e887df283ab29113a57a3108e25e863b;
    // uint256 internal constant Z_88 = 0x15a0cd47e243e86684bb6df32503c3f9eca80c1759f060d835b1efdb206a483c;
    // uint256 internal constant Z_89 = 0x16beb4758ec8ca756e1501d928354218e91095cf2eb9f4a8451ba6182c3cb2a4;
    // uint256 internal constant Z_90 = 0x1e7479540824ffac6f0b5dce1d2552533c15e140cac4c27c72cf6adbc5e86619;
    // uint256 internal constant Z_91 = 0x20cad5dca64ecafebf04fe3e3cd576319f5b47d8aca87a9be6b312752e1d1c29;
    // uint256 internal constant Z_92 = 0x244eadd558b9b1e8e047acbe284844a6fbd49a3ab7be389dc1fd5d8d354627ca;
    // uint256 internal constant Z_93 = 0x29c769cefdefd754fcedeb0120f96fe316f3b9248b9b5739a0da6ce77aa2b7b7;
    // uint256 internal constant Z_94 = 0x2258239cefc66be8309b2aa6352481fa2c1924758b544e68d543ee59fb8f8170;
    // uint256 internal constant Z_95 = 0x2e9437cb2fcddaa69f049c125952ed75655586b7ae559182b709c32140ffd787;
    // uint256 internal constant Z_96 = 0x11d2afd5ff7946d0516792a9a387452be828debd39baf7e1e4c8023e72fa1635;
    // uint256 internal constant Z_97 = 0x0bc15b1a9d9a4c5fc7c55a2a2f4809e91fa76ce64d5bd4dbe693221ec23ffded;
    // uint256 internal constant Z_98 = 0x0aad4de23a9447b2b764145af72ba1b13f9f2e4009c520b80d098e9c1abf16e3;
    // uint256 internal constant Z_99 = 0x06d71bfd44bbb6812f2d4d9b7772ed228586268c95e3f7ea6900abd1af4a33f7;
    // uint256 internal constant Z_100 = 0x08d4fec7e72e0ffe0ac63f27a692c1def60b7b7c98625350044565687b9c0343;
    // uint256 internal constant Z_101 = 0x27d72bb2023bc5b7d59b4e15668e709b8cb5a5a645e3f802d92f6bfd413cc1c7;
    // uint256 internal constant Z_102 = 0x27ca7af7fbbeef5eb8b40d4291efe671f852f94611e5120116ce5c97306fee48;
    // uint256 internal constant Z_103 = 0x27db8bf2411040bf086e90553eac2403728e44ac15f516569da98b219d80e866;
    // uint256 internal constant Z_104 = 0x305f8f24068304bd3bc11bf22e66b412df99798e593cafa330699003c52a3402;
    // uint256 internal constant Z_105 = 0x24b47b17377eb4aacacc0dd94df9749e2750aa773fa237b2f46381ba0cae3011;
    // uint256 internal constant Z_106 = 0x2ac60d2dcb1211c67c8f7f8fac5432395c1a5b20d86cf76eac34a8a02fca1607;
    // uint256 internal constant Z_107 = 0x2686b83e657cbf3ae86b1887f72a53df3f8d9e9b7d69cff83f7507473a0d9c30;
    // uint256 internal constant Z_108 = 0x1b597ca7d621de05c3c5d1db9dbdb9bebd0e1c3d714476732ffe99e53759b712;
    // uint256 internal constant Z_109 = 0x26db536f4d078dbb0da057a7c4920b34de3b7bfc4622d72b358e99d1305bdc56;
    // uint256 internal constant Z_110 = 0x0cc5d49c74b92dde0272d403821d19dab9fc290a2735783f5b7291ad646d0cc8;
    // uint256 internal constant Z_111 = 0x25b2ed30a750f22f21de6607ea4a9b31fd8160b01f1af544855f2e47ca2d3acc;
    // uint256 internal constant Z_112 = 0x24d5ca324c8d8a8b77c7b8dfa749ef0eb8ca4dc441f2a3cb7365d19da96ebe36;
    // uint256 internal constant Z_113 = 0x01f5877aa580f7d282f5e8fe55897e39c66d382c0afba588ac68716bea22b164;
    // uint256 internal constant Z_114 = 0x2afa07c1d7e0f1b62977e1e395ff99202ae2a390e977455fed457e242233140c;
    // uint256 internal constant Z_115 = 0x0d8423a2e4ee2fdfa563394c0ef07cd908f76941c88b8797053595b15a1f694c;
    // uint256 internal constant Z_116 = 0x21e17b7a0dc6839c631cfdc9a9314f4e482e764b886d6b17346bab89a060d882;
    // uint256 internal constant Z_117 = 0x2488d41fc981a6120baad7e54149033f8fe58d9eb8d61608d80a66ab30930cf7;
    // uint256 internal constant Z_118 = 0x11c2ecf1e08cd24d987a4fc0234012b1e19d943d5e56c64b594a825d4fc6feeb;
    // uint256 internal constant Z_119 = 0x2d4324cf982b4b0cee4e431edd552f8dc6b334b541f8ccc1137d7a59a38bce9b;
    // uint256 internal constant Z_120 = 0x266279272352737c7941bb72caa5c8f78f3854adbacff3fec792f03e12475d3b;
    // uint256 internal constant Z_121 = 0x103266bbc8ab98269b21a03f39ee4cf714b088f74c6ee628f3baacb2fc520a77;
    // uint256 internal constant Z_122 = 0x029b396bdafaa0f9decfe7b46b9e5553348e1dfd2896057427d204b01b4eef71;
    // uint256 internal constant Z_123 = 0x18a2373c9a012696d52067f20ab687bf2e626e371b4edac577cde77eac24a887;
    // uint256 internal constant Z_124 = 0x15875f2e5cb10fd3e775575213a8ac03d1d61c85de096184e8b625a8e7393327;
    // uint256 internal constant Z_125 = 0x2f2079f3b5b2009511145802d3287adf54e02944a28bcfec1fab5a2655e5710c;
    // uint256 internal constant Z_126 = 0x17d246b291227a5d9ca413b7d9293da766cdd68063f3796cc7ca4a191e8b12ff;
    // uint256 internal constant Z_127 = 0x2876f88c8cf4fa7bbd68668860eb6b8fc37882a050a8e70745a73f6ac66a88e4;
    // uint256 internal constant Z_128 = 0x191d14df3bd6bc5fd14b5ca14c60e5ee8dcf3c7d7cf9f421fb3e92312ec2ae7a;
    // uint256 internal constant Z_129 = 0x14935d601de8d6fbd04b084de8f8510dd25b5ed1d80ab5382b8f908dc0734b3a;
    // uint256 internal constant Z_130 = 0x280d3b6cc72d32a8821b98bd80683dfa206fb5f440200e8d356dc74e7def0197;
    // uint256 internal constant Z_131 = 0x0442f11a6fd5e21935722bf39fe83ecb69311953d0030ed993f26bffd26c7f3a;
    // uint256 internal constant Z_132 = 0x2aad1d3f97958285ed7157d9afd1e5350d69392ec61777ec17f67df7d498594d;
    // uint256 internal constant Z_133 = 0x11e08aa56f036675f04009e7de651922d6cee17e275d9cab84ed82bba7311d1e;
    // uint256 internal constant Z_134 = 0x22e2fa9c438b48750f280097c922afcd2738d5f20bf63aae63f08a364365fa6a;
    // uint256 internal constant Z_135 = 0x0630bc4fafaf0a6b3a5fa5843599d0522426c0369e6c554375d257f635bafe19;
    // uint256 internal constant Z_136 = 0x2ea4923587848ef8ef9503b50a7b653bfbecbbd3a7634241865fdd9788581255;
    // uint256 internal constant Z_137 = 0x0cb19c08f874d972f76dda4610d79adf95ac2931114591e2d1ebb5c5e591251e;
    // uint256 internal constant Z_138 = 0x28486750cb3972380315d5f97aeae10355dfbe70ae965cf5276341e75637010e;
    // uint256 internal constant Z_139 = 0x065bad4bd161fa331970387cf4e0e2aca78fc939f54653524312b2b9ecbcf67b;
    // uint256 internal constant Z_140 = 0x0b13c22302d0ec7672fb1f54faf47d5a4c85a2d1feaae106552f7134e006f3d5;
    // uint256 internal constant Z_141 = 0x2d7d2a0391748d8c8ef41c9dd0f6d3a2922db437391cbe1197be2ed196b4457f;
    // uint256 internal constant Z_142 = 0x2aecf58eab132a0d395696737fc95f975e085818b45304c9437401ee5143f052;
    // uint256 internal constant Z_143 = 0x0e601763ac46f0fc4fb2cc14d1d54fc43b07787608c2cb3550caae34e2d8e258;
    // uint256 internal constant Z_144 = 0x1be72fe719c1d90d9a9f93e87d983fd51d7497bf88cbd437906c1287058be162;
    // uint256 internal constant Z_145 = 0x185a0a77b6c9c3001259153d8e6c2c4b34e80197a41e69fa45e40a618f8bbcda;
    // uint256 internal constant Z_146 = 0x0d4e063fd65ef8cc8ada36d22d905306f3aea0e44d61fa811a4a005e00550aaf;
    // uint256 internal constant Z_147 = 0x0b7c11ec8ed3cfe25ae7fb3c3722576c459473d1f512ead4c63e26e70be12bd2;
    // uint256 internal constant Z_148 = 0x235c44d1a77d459d98e3af0a7e55eb1a3f2e702ee34c9e64fda513b3599ce322;
    // uint256 internal constant Z_149 = 0x2d70ac32519f2bdc29091262631aad57e21f8a2a74bab1101f2f7b57a54b25cc;
    // uint256 internal constant Z_150 = 0x19afb658f804063e7ad00e318c27cebf4416b7ae78d842847e2cbc5c5404ab06;
    // uint256 internal constant Z_151 = 0x2682a3ae14c59e2fed90362edd60ae405f14e6355cf0eec942ac1aaa609d614c;
    // uint256 internal constant Z_152 = 0x1473bfe72fe963657f8efd5f739af0c5c66823547caa048cdd503484ccc5c9bd;
    // uint256 internal constant Z_153 = 0x10c7a72ac9a77635b3081cdfee930e862678a040027e0618d0c1edaa6cecfd3d;
    // uint256 internal constant Z_154 = 0x0ba249df3c9d0468183a277306e43fb37a057074d490ad26d710e36c6f4da526;
    // uint256 internal constant Z_155 = 0x051ac14810b874b6de21b39a1673e621f98504bf51eff49769ca050a93c3bd0a;
    // uint256 internal constant Z_156 = 0x2371fb11bc5fff7723eccdabf6251caffcfb186ccdfdcfc973e1d2ef8ae8b476;
    // uint256 internal constant Z_157 = 0x0427aed8455d7317318d438d5eed5077ea9899b3007156c291ccbabad77438dd;
    // uint256 internal constant Z_158 = 0x0d03e86224104550beee8f32b89500f491975059989af529d6a950067bfec431;
    // uint256 internal constant Z_159 = 0x28904fff546ed6840b56f81c63b6d2f25c87157a1663aa25672426c7f8bfbdf2;
    // uint256 internal constant Z_160 = 0x28180793b764369e9f836ff9b58a824abb0b1346b37e110797016482e9efcb90;
    // uint256 internal constant Z_161 = 0x13e30a7166c6d6680a74b0e1659e646dffa30244912927562ff2271de1c6f3fe;
    // uint256 internal constant Z_162 = 0x1a278944d6a29b7fd1baf39705dba8d36292056940072562c0ec74774ba7f686;
    // uint256 internal constant Z_163 = 0x199adce2956ef1cc7cb4064dcaa12750b526e5e328e677b9a548beb3c9772f70;
    // uint256 internal constant Z_164 = 0x1e3ca54eef30cdb63e52e45ae1911b47dd99a640bd8268e3ba044cdc210c29db;
    // uint256 internal constant Z_165 = 0x0999e8c54428c4f9ee80a9f8efd8c5b4c9984287a9c4377bdfe62a7721fa1684;
    // uint256 internal constant Z_166 = 0x04360d5d8ca8aa345231b07fcc324a762fcff1591527547babf6ec2612d4bfbf;
    // uint256 internal constant Z_167 = 0x2eb9af1fed1049ea89a3eaf3677a2ad6329e323a9bed5aba0100a8e8b2377d80;
    // uint256 internal constant Z_168 = 0x1596a4c622cbf5f0f838ed471c22bdfdc08705228fd5e923d0388f9fd59114ae;
    // uint256 internal constant Z_169 = 0x1a9741e26d95c6878004379613a208fda391fb0550a2a42765fd5b7d10df6bcb;
    // uint256 internal constant Z_170 = 0x26c35721be882b912684ccd4f8c76c8eb1e44bacd49f376fde13ac830c2c7b49;
    // uint256 internal constant Z_171 = 0x039c5a58b60d648eef1eee90eff3da4023156288e1c42092d395d1a681991527;
    // uint256 internal constant Z_172 = 0x1530cfb19b2988d33004c9397a8275d2c96da8c80f775be2b3acedb10bb4442f;
    // uint256 internal constant Z_173 = 0x1ee76dfa7ebdcdaa49fd7026abd38bf2fdd23b1c1788ef8969e0cb4feefe7f86;
    // uint256 internal constant Z_174 = 0x0e175a60cb72ce9554337d853ecc25b0a330a38dd1630cb26d6dfd394e252701;
    // uint256 internal constant Z_175 = 0x0ef16063e8ae67754f9c79f8e553aa65b794d226d40d157a1faa21708daf47cd;
    // uint256 internal constant Z_176 = 0x13c697754916b7a5f62cc01c502913d894fdcb9b24a608123b1b8e8e9e86ad6c;
    // uint256 internal constant Z_177 = 0x1f34dab5ca5bfe37ce4f529c9a15dcea77119bfe391a053ba903360cf6d70922;
    // uint256 internal constant Z_178 = 0x1b62ba9c417143a85080825ef43b5b5ed49118b02ff5313fd9b0725e3efe3dc6;
    // uint256 internal constant Z_179 = 0x2e593c633966142cca4af6e2e126606534629481a6850a772c0f2f47579dcecf;
    // uint256 internal constant Z_180 = 0x23354213e2d3df8ed30196c1447ba6821d1e8e0484c5263516ba4a78d5bd5d1b;
    // uint256 internal constant Z_181 = 0x2b37b83746e0ed499247229306428ec184decadc09a227f777932aa8d74abda0;
    // uint256 internal constant Z_182 = 0x1126b7dcd68388181f90e30f1be042ee4d88dde8ae69ea0a951b795f004a68ce;
    // uint256 internal constant Z_183 = 0x0b274272b11f917915bb62dc37c3396db6a1a9e80a61e072020d1388c7a25ffe;
    // uint256 internal constant Z_184 = 0x2ea7eb536d6501a22b6b1b00cdab32d7bf6f2809a2abae64899ca1cb68789a7c;
    // uint256 internal constant Z_185 = 0x0b1f0ea61565419752f7faaf1162c96b760e14fd498cddc09e22825318e040fe;
    // uint256 internal constant Z_186 = 0x0753627d2714f0544802a76bde19da35c878acee7f2f4ca3bf44b9fe0eec0e9c;
    // uint256 internal constant Z_187 = 0x27144fd91f5dce1612a120b0e7d6d6d984476c4ee0186b1cd62ee4e0b62ccf54;
    // uint256 internal constant Z_188 = 0x0fa2cc18e5f931cc1419bd0389affe25dfe7e6ca152b30240c8f554d4fd034a9;
    // uint256 internal constant Z_189 = 0x03521ce9c7646ff3d0fb9e94658230f6543c565304aee4e1a9f2b4ec2ac3a302;
    // uint256 internal constant Z_190 = 0x10cc77694c505b684501ecb7108682fc60afc673573eeb64d53e375a74ebb5a7;
    // uint256 internal constant Z_191 = 0x2e40682c00cf082db2bc998d220a908687c8f83473d0ffd66aa0d30321c32ccc;
    // uint256 internal constant Z_192 = 0x2b5f33c70aad65566b268d19bc79e27eec8bfe01a2044cc4faeefc08346b4674;
    // uint256 internal constant Z_193 = 0x10f3dd45ecf58af8de4b6b21153d1d2c15270b6a01d469ccd03a93213333820e;
    // uint256 internal constant Z_194 = 0x2aea33920c93a53c052ffe8b758b3151740ffb9aa636989f09253704bbe524e4;
    // uint256 internal constant Z_195 = 0x29c85386839d6b751937959db3213d2b6653f1a71be8bd1d5414ea95a2aa6325;
    // uint256 internal constant Z_196 = 0x22bcfda134e4049fc42504f32aa30ca9a587cfcce18d6a59e232428fa7755f6c;
    // uint256 internal constant Z_197 = 0x24c668653d5174dc37ccfffa9af8912cdd211b2821c724b21b2e78454c790d8c;
    // uint256 internal constant Z_198 = 0x2406628c2e65c3a9b0287b95a8b428f0d0c306b016132f5d90592d85dbdba44c;
    // uint256 internal constant Z_199 = 0x174c4c80a56630c2030f595c51572d79261282be1ede964a50381cd850aaafa2;
    // uint256 internal constant Z_200 = 0x086b4acaf40f36be0a3a2b4ef06eddc2a757671b21a8993bbf6396bfc5ffdc88;
    // uint256 internal constant Z_201 = 0x0cc5210c045bcbe9eada5007493d4b62f04358c1e8bc6ab985c82cdf02ffa176;
    // uint256 internal constant Z_202 = 0x05e1bde5655e6df6a54caaea5cabe204e12f5d291ecf4853f3fa53a05529dd66;
    // uint256 internal constant Z_203 = 0x1422679a89cb624e08fe3a5f7ce44cb97822b003682a0e0090de9a6c0c786631;
    // uint256 internal constant Z_204 = 0x21cf5ec9cf99638792d3b8fa7a64a3df3aeaa047a07e78a27ab64bb07733b9f8;
    // uint256 internal constant Z_205 = 0x26beda430d84bb32db4929f73736aa5487da181d3c33add76a464fbbd80e3950;
    // uint256 internal constant Z_206 = 0x02e65d6609919f8f75278efe42d4f2ab36eb8e5041ac1a355ac399795ca907ea;
    // uint256 internal constant Z_207 = 0x01bbd009ca7046c755969f82c32f0f9ab6052db93ffdf521b41d270f5c008c15;
    // uint256 internal constant Z_208 = 0x0d87dce55fd09f874f274cfe230dcbad9b9134a268c2a4674f8e41e8603a9c59;
    // uint256 internal constant Z_209 = 0x2ee61774f1e890f6c75c2de31a8e6e45c1d155f29e883fa57d2293cc44a80d1a;
    // uint256 internal constant Z_210 = 0x20c44157abea3923db17e92ddfa12e4478bad9f31abf84af6e4a3c8cb0bb224d;
    // uint256 internal constant Z_211 = 0x0e39a6177553a5f5d22dc594f67942dcf1a9091a29655e5715c65e2a9efe2da2;
    // uint256 internal constant Z_212 = 0x0c502db48070a4a2d8203107da9185b3f77ec7c7db51cefa5833b60e854c5240;
    // uint256 internal constant Z_213 = 0x075bd526054b06f28160a153fd6739a77fb7941a5f1f627a92558c2bb2e621a7;
    // uint256 internal constant Z_214 = 0x1c1473eca4972734f45cada131b3f2857d0940a5a6a99087129f376fe697907e;
    // uint256 internal constant Z_215 = 0x265cb0ac4ea34fc7f7e1a7e6f8db55b7f305e773efcce9e6fc25a0a823264068;
    // uint256 internal constant Z_216 = 0x1fd84e844aae06bbf387123cf86563bc658783f663703905ead855f98bbcfab6;
    // uint256 internal constant Z_217 = 0x08cd1c63e9878724aa25adc7338d37dfa52e7e524f6ebfb7e11601104b53720a;
    // uint256 internal constant Z_218 = 0x15bc7a29363d186cce414fb46a8fb4fe5821d0a03d8d68eefe53ed039220d334;
    // uint256 internal constant Z_219 = 0x0398605c7c9d50f7533a8320293a4f23ca02bf337d838a8fc345e29306e6d77d;
    // uint256 internal constant Z_220 = 0x1101c4f7b67e9777464abb8ed89a8870cc48365f294b904777ef32f814f08ea6;
    // uint256 internal constant Z_221 = 0x161ea4fab9e94589d26e923faf997cf706041803d7674f0ec9d0956e329d7f12;
    // uint256 internal constant Z_222 = 0x11ea79651a205c08ae8b2e1a6bf76374f52955401b3ab1a59d0fac92c8fbfb11;
    // uint256 internal constant Z_223 = 0x0efb5726b0a5387f2aa20ce7e82e3ce65000f4e3f49ab6cb81812a0772da0e63;
    // uint256 internal constant Z_224 = 0x0f2e9b654dfa5e6b88da89b11430ed70edaac183fa34c1c68da6477fe5dd4e65;
    // uint256 internal constant Z_225 = 0x1edd204b2911bc0f4062ba340f35cbed8ca12a9c26d820b996b6201688a6db3f;
    // uint256 internal constant Z_226 = 0x06a347179b8c593fb88eaf0314ea58f2da4e32f976df1666a2de21e4eb2a85b5;
    // uint256 internal constant Z_227 = 0x2949e5092ca7b5a33d78c7955d272bddcd5e5c3104009e677cec3ba652e99c7d;
    // uint256 internal constant Z_228 = 0x2744922008123f16528702e08aeb0cccdec4852e2c27cfc6ba628f64b7a9453a;
    // uint256 internal constant Z_229 = 0x044670cc2b6f45b05e321fdc18cca7aee55c1e6e1d080633499db6f3ec5e46bb;
    // uint256 internal constant Z_230 = 0x2d2f6feff2790e9bf42c438f73d34461d3c9e1a9ff1fc0dc619491fff49f7230;
    // uint256 internal constant Z_231 = 0x0a66cb763abbc9769424c60922872940f0f6057372aaec7f2514373714d55ae0;
    // uint256 internal constant Z_232 = 0x154e3cc251f5219bebc7e646fd5aab03da83f914537ca1932fc313aa9cf25a6a;
    // uint256 internal constant Z_233 = 0x2deaf324c8207fb2bbec908386e45d17651432fb81c9dd07d0e89053bd76a37c;
    // uint256 internal constant Z_234 = 0x206301573d7865fa0547f59840211a8352a548c5ee23382f1fdf35aa977c0bf3;
    // uint256 internal constant Z_235 = 0x22f1eab184ae20a4a3e61127daaeec5becc93cc92af421874e6b7a17510455d4;
    // uint256 internal constant Z_236 = 0x209d3edd951ffd6d583c85666e61d16c4d004965ddcc2e88ad0b210844ffef08;
    // uint256 internal constant Z_237 = 0x05575df162b05e4b221c92fe3b7a734809525cf3b6145af6125623c28c24eabb;
    // uint256 internal constant Z_238 = 0x27a6faac0f0bf5664c67aa7023d254429c218db4304609a6f9284e02ce690a0b;
    // uint256 internal constant Z_239 = 0x1fc29c5d4d74d416da55e07fe3afc57c3fffa887e61d35576a50723666c5ef36;
    // uint256 internal constant Z_240 = 0x2d856d7abbf4f3ad209d8f8a0744b2ed9c6fa9d171eb97d529cf6add1c6ce522;
    // uint256 internal constant Z_241 = 0x299dae045d39796d3e51951976b4efabfb435087ca89328e66da61025770908b;
    // uint256 internal constant Z_242 = 0x132ede13aa968a148a37a7935c713ba9672c576d379a934d3361788a95c30ff0;
    // uint256 internal constant Z_243 = 0x2e4836257570bda6e49e6e7aba012f1371b91c5b0cf908686882dab6f73b81be;
    // uint256 internal constant Z_244 = 0x2e0bac3d524dd9fa7895c19dd5af4490f0e3f81bc9f7cb9cb9048e408900fe21;
    // uint256 internal constant Z_245 = 0x05938147b9477d25727cbc6bd9d6061131f57d858ed7d11ba6f289de4f8ec090;
    // uint256 internal constant Z_246 = 0x0e80938e231105fe4097e524ae47b50056a18c72e721998c87e1300c2c31dc40;
    // uint256 internal constant Z_247 = 0x2d135beddd00cac3b4eca8f7e981b85ead8b9a57353a43a41fae21b5eee82c82;
    // uint256 internal constant Z_248 = 0x2737a9f66ed89e8952e23384a6d7181f7fbeae33a75b3194d73bb1767b0a2fbe;
    // uint256 internal constant Z_249 = 0x22d44b21d94ffec06a62b039aaf963907ee2dab59db79f54e2cbf38ca24cc9e9;
    // uint256 internal constant Z_250 = 0x027db90d6335121dba15313c56afaa5691288f0c1cb407b2cd69e749bdf4e136;
    // uint256 internal constant Z_251 = 0x12a958a0352f39b588fec2c37be4032aaa382ccd590601652121b9aff2968f71;
    // uint256 internal constant Z_252 = 0x15270d5473f0912e668bad43191fb29618ce0470608df28086d30ebfb85377d0;
    // uint256 internal constant Z_253 = 0x1d9e31b6a3f3121a1bec36549f5a5ad55b91d8a5915b59cdf9f9e4c1484b4316;
    // uint256 internal constant Z_254 = 0x1b54e3111a96213460e79f2466af16a85d2456b3b100811287ca4d8b46751974;
    // uint256 internal constant Z_255 = 0x15569b65a4967399b866a5d8e00f503b416b6c4bd2f990be80241915724ed8a3;
    // uint256 internal constant Z_256 = 0x063076f073adbecf1433407cf22ce2503a996a2a55f9f96aa1aa21717d5bc2b0;

    function _defaultZero(uint256 index) internal pure returns (uint256) {
        if (index == 0) return Z_0;
        if (index == 1) return Z_1;
        if (index == 2) return Z_2;
        if (index == 3) return Z_3;
        if (index == 4) return Z_4;
        if (index == 5) return Z_5;
        if (index == 6) return Z_6;
        if (index == 7) return Z_7;
        if (index == 8) return Z_8;
        if (index == 9) return Z_9;
        if (index == 10) return Z_10;
        if (index == 11) return Z_11;
        if (index == 12) return Z_12;
        if (index == 13) return Z_13;
        if (index == 14) return Z_14;
        if (index == 15) return Z_15;
        if (index == 16) return Z_16;
        if (index == 17) return Z_17;
        if (index == 18) return Z_18;
        if (index == 19) return Z_19;
        if (index == 20) return Z_20;
        if (index == 21) return Z_21;
        if (index == 22) return Z_22;
        if (index == 23) return Z_23;
        if (index == 24) return Z_24;
        if (index == 25) return Z_25;
        if (index == 26) return Z_26;
        if (index == 27) return Z_27;
        if (index == 28) return Z_28;
        if (index == 29) return Z_29;
        if (index == 30) return Z_30;
        if (index == 31) return Z_31;
        if (index == 32) return Z_32;
        // if (index == 33) return Z_33;
        // if (index == 34) return Z_34;
        // if (index == 35) return Z_35;
        // if (index == 36) return Z_36;
        // if (index == 37) return Z_37;
        // if (index == 38) return Z_38;
        // if (index == 39) return Z_39;
        // if (index == 40) return Z_40;
        // if (index == 41) return Z_41;
        // if (index == 42) return Z_42;
        // if (index == 43) return Z_43;
        // if (index == 44) return Z_44;
        // if (index == 45) return Z_45;
        // if (index == 46) return Z_46;
        // if (index == 47) return Z_47;
        // if (index == 48) return Z_48;
        // if (index == 49) return Z_49;
        // if (index == 50) return Z_50;
        // if (index == 51) return Z_51;
        // if (index == 52) return Z_52;
        // if (index == 53) return Z_53;
        // if (index == 54) return Z_54;
        // if (index == 55) return Z_55;
        // if (index == 56) return Z_56;
        // if (index == 57) return Z_57;
        // if (index == 58) return Z_58;
        // if (index == 59) return Z_59;
        // if (index == 60) return Z_60;
        // if (index == 61) return Z_61;
        // if (index == 62) return Z_62;
        // if (index == 63) return Z_63;
        // if (index == 64) return Z_64;
        // if (index == 65) return Z_65;
        // if (index == 66) return Z_66;
        // if (index == 67) return Z_67;
        // if (index == 68) return Z_68;
        // if (index == 69) return Z_69;
        // if (index == 70) return Z_70;
        // if (index == 71) return Z_71;
        // if (index == 72) return Z_72;
        // if (index == 73) return Z_73;
        // if (index == 74) return Z_74;
        // if (index == 75) return Z_75;
        // if (index == 76) return Z_76;
        // if (index == 77) return Z_77;
        // if (index == 78) return Z_78;
        // if (index == 79) return Z_79;
        // if (index == 80) return Z_80;
        // if (index == 81) return Z_81;
        // if (index == 82) return Z_82;
        // if (index == 83) return Z_83;
        // if (index == 84) return Z_84;
        // if (index == 85) return Z_85;
        // if (index == 86) return Z_86;
        // if (index == 87) return Z_87;
        // if (index == 88) return Z_88;
        // if (index == 89) return Z_89;
        // if (index == 90) return Z_90;
        // if (index == 91) return Z_91;
        // if (index == 92) return Z_92;
        // if (index == 93) return Z_93;
        // if (index == 94) return Z_94;
        // if (index == 95) return Z_95;
        // if (index == 96) return Z_96;
        // if (index == 97) return Z_97;
        // if (index == 98) return Z_98;
        // if (index == 99) return Z_99;
        // if (index == 100) return Z_100;
        // if (index == 101) return Z_101;
        // if (index == 102) return Z_102;
        // if (index == 103) return Z_103;
        // if (index == 104) return Z_104;
        // if (index == 105) return Z_105;
        // if (index == 106) return Z_106;
        // if (index == 107) return Z_107;
        // if (index == 108) return Z_108;
        // if (index == 109) return Z_109;
        // if (index == 110) return Z_110;
        // if (index == 111) return Z_111;
        // if (index == 112) return Z_112;
        // if (index == 113) return Z_113;
        // if (index == 114) return Z_114;
        // if (index == 115) return Z_115;
        // if (index == 116) return Z_116;
        // if (index == 117) return Z_117;
        // if (index == 118) return Z_118;
        // if (index == 119) return Z_119;
        // if (index == 120) return Z_120;
        // if (index == 121) return Z_121;
        // if (index == 122) return Z_122;
        // if (index == 123) return Z_123;
        // if (index == 124) return Z_124;
        // if (index == 125) return Z_125;
        // if (index == 126) return Z_126;
        // if (index == 127) return Z_127;
        // if (index == 128) return Z_128;
        // if (index == 129) return Z_129;
        // if (index == 130) return Z_130;
        // if (index == 131) return Z_131;
        // if (index == 132) return Z_132;
        // if (index == 133) return Z_133;
        // if (index == 134) return Z_134;
        // if (index == 135) return Z_135;
        // if (index == 136) return Z_136;
        // if (index == 137) return Z_137;
        // if (index == 138) return Z_138;
        // if (index == 139) return Z_139;
        // if (index == 140) return Z_140;
        // if (index == 141) return Z_141;
        // if (index == 142) return Z_142;
        // if (index == 143) return Z_143;
        // if (index == 144) return Z_144;
        // if (index == 145) return Z_145;
        // if (index == 146) return Z_146;
        // if (index == 147) return Z_147;
        // if (index == 148) return Z_148;
        // if (index == 149) return Z_149;
        // if (index == 150) return Z_150;
        // if (index == 151) return Z_151;
        // if (index == 152) return Z_152;
        // if (index == 153) return Z_153;
        // if (index == 154) return Z_154;
        // if (index == 155) return Z_155;
        // if (index == 156) return Z_156;
        // if (index == 157) return Z_157;
        // if (index == 158) return Z_158;
        // if (index == 159) return Z_159;
        // if (index == 160) return Z_160;
        // if (index == 161) return Z_161;
        // if (index == 162) return Z_162;
        // if (index == 163) return Z_163;
        // if (index == 164) return Z_164;
        // if (index == 165) return Z_165;
        // if (index == 166) return Z_166;
        // if (index == 167) return Z_167;
        // if (index == 168) return Z_168;
        // if (index == 169) return Z_169;
        // if (index == 170) return Z_170;
        // if (index == 171) return Z_171;
        // if (index == 172) return Z_172;
        // if (index == 173) return Z_173;
        // if (index == 174) return Z_174;
        // if (index == 175) return Z_175;
        // if (index == 176) return Z_176;
        // if (index == 177) return Z_177;
        // if (index == 178) return Z_178;
        // if (index == 179) return Z_179;
        // if (index == 180) return Z_180;
        // if (index == 181) return Z_181;
        // if (index == 182) return Z_182;
        // if (index == 183) return Z_183;
        // if (index == 184) return Z_184;
        // if (index == 185) return Z_185;
        // if (index == 186) return Z_186;
        // if (index == 187) return Z_187;
        // if (index == 188) return Z_188;
        // if (index == 189) return Z_189;
        // if (index == 190) return Z_190;
        // if (index == 191) return Z_191;
        // if (index == 192) return Z_192;
        // if (index == 193) return Z_193;
        // if (index == 194) return Z_194;
        // if (index == 195) return Z_195;
        // if (index == 196) return Z_196;
        // if (index == 197) return Z_197;
        // if (index == 198) return Z_198;
        // if (index == 199) return Z_199;
        // if (index == 200) return Z_200;
        // if (index == 201) return Z_201;
        // if (index == 202) return Z_202;
        // if (index == 203) return Z_203;
        // if (index == 204) return Z_204;
        // if (index == 205) return Z_205;
        // if (index == 206) return Z_206;
        // if (index == 207) return Z_207;
        // if (index == 208) return Z_208;
        // if (index == 209) return Z_209;
        // if (index == 210) return Z_210;
        // if (index == 211) return Z_211;
        // if (index == 212) return Z_212;
        // if (index == 213) return Z_213;
        // if (index == 214) return Z_214;
        // if (index == 215) return Z_215;
        // if (index == 216) return Z_216;
        // if (index == 217) return Z_217;
        // if (index == 218) return Z_218;
        // if (index == 219) return Z_219;
        // if (index == 220) return Z_220;
        // if (index == 221) return Z_221;
        // if (index == 222) return Z_222;
        // if (index == 223) return Z_223;
        // if (index == 224) return Z_224;
        // if (index == 225) return Z_225;
        // if (index == 226) return Z_226;
        // if (index == 227) return Z_227;
        // if (index == 228) return Z_228;
        // if (index == 229) return Z_229;
        // if (index == 230) return Z_230;
        // if (index == 231) return Z_231;
        // if (index == 232) return Z_232;
        // if (index == 233) return Z_233;
        // if (index == 234) return Z_234;
        // if (index == 235) return Z_235;
        // if (index == 236) return Z_236;
        // if (index == 237) return Z_237;
        // if (index == 238) return Z_238;
        // if (index == 239) return Z_239;
        // if (index == 240) return Z_240;
        // if (index == 241) return Z_241;
        // if (index == 242) return Z_242;
        // if (index == 243) return Z_243;
        // if (index == 244) return Z_244;
        // if (index == 245) return Z_245;
        // if (index == 246) return Z_246;
        // if (index == 247) return Z_247;
        // if (index == 248) return Z_248;
        // if (index == 249) return Z_249;
        // if (index == 250) return Z_250;
        // if (index == 251) return Z_251;
        // if (index == 252) return Z_252;
        // if (index == 253) return Z_253;
        // if (index == 254) return Z_254;
        // if (index == 255) return Z_255;
        // if (index == 256) return Z_256;
        revert WrongDefaultZeroIndex();
    }

    function hasher(uint256[2] memory inputs) internal pure returns (uint256) {
        if (inputs[0] >= SNARK_SCALAR_FIELD || inputs[1] >= SNARK_SCALAR_FIELD) {
            revert ValueGreaterThanSnarkScalarField();
        }
        return PoseidonT3.hash(inputs);
    }

    function hasherUnsafe(uint256[2] memory inputs) internal pure returns (uint256) {
        return PoseidonT3.hash(inputs);
    }

    function defaultZero(uint256 index) public pure returns (uint256) {
        return _defaultZero(index);
    }

    function init(BinaryIMTData storage self, uint256 depth, uint256 zero) public {
        if (zero >= SNARK_SCALAR_FIELD) {
            revert ValueGreaterThanSnarkScalarField();
        }
        InternalBinaryIMT._init(self, depth, zero, hasherUnsafe);
    }

    function initWithDefaultZeroes(BinaryIMTData storage self, uint256 depth) public {
        InternalBinaryIMT._initWithDefaultZeroes(self, depth, _defaultZero);
    }

    function insert(BinaryIMTData storage self, uint256 leaf) public returns (uint256) {
        if (leaf >= SNARK_SCALAR_FIELD) {
            revert ValueGreaterThanSnarkScalarField();
        }
        return InternalBinaryIMT._insert(self, leaf, hasherUnsafe, _defaultZero);
    }

    function update(
        BinaryIMTData storage self,
        uint256 leaf,
        uint256 newLeaf,
        uint256[] calldata proofSiblings,
        uint8[] calldata proofPathIndices
    ) public {
        if (leaf >= SNARK_SCALAR_FIELD || newLeaf >= SNARK_SCALAR_FIELD) {
            revert ValueGreaterThanSnarkScalarField();
        }
        InternalBinaryIMT._update(self, leaf, newLeaf, proofSiblings, proofPathIndices, hasher);
    }

    function remove(
        BinaryIMTData storage self,
        uint256 leaf,
        uint256[] calldata proofSiblings,
        uint8[] calldata proofPathIndices
    ) public {
        if (leaf >= SNARK_SCALAR_FIELD) {
            revert ValueGreaterThanSnarkScalarField();
        }
        InternalBinaryIMT._remove(self, leaf, proofSiblings, proofPathIndices, hasher, Z_0);
    }
}
